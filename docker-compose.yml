version: "3"
services:
    certbot:
        image: certbot/certbot
        volumes: 
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
        depends_on: 
            - blogapp

    nginx:
        image: nginx:stable-alpine
        ports:
            - "80:80"
            - "443:443"
        volumes: 
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro 
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
        depends_on: 
            - blogapp
    blogapp:
        deploy:
            replicas: 3
            restart_policy:
                condition: any
            update_config:
                parallelism: 2
                delay: 15s
                failure_action: rollback
        build: .
        environment: 
            # PORT: 3000
            MONGO_USER: root
            MONGO_PASSWORD: mypass123
        command: node index.js
        depends_on: 
            - mongo
    mongo:
        image: mongo
        volumes: 
            - mongo-storage:/data/db
        environment: 
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: mypass123
    redis:
        image: redis

volumes:
    mongo-storage: